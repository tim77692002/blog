<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- <update>는 parameterType 필요함. resultType은 필요 없음 -->
<mapper namespace="member">

	<select id="total" parameterType="Map" resultType="int">
		select count(*) from member
		<where>
			<if test="col=='mname'">
				mname LIKE '%'||#{word}||'%' </if>
			<if test="col=='email'">
				email LIKE '%'||#{word}||'%' </if>
			<if test="col=='id'">
				id LIKE '%'||#{word}||'%' </if>
		</where>
	</select>

	<select id="list" parameterType="Map" resultType="MemberDto">
		SELECT id, mname, tel, email, zipcode, address1, address2, fname, r
		from(
		SELECT id, mname, tel, email, zipcode, address1, address2, fname, rownum r
		from(
		SELECT id, mname, tel, email, zipcode, address1, address2, fname
		FROM member

		<where>
			<if test="col=='mname'">
				mname LIKE '%'||#{word}||'%' </if>
			<if test="col=='email'">
				email LIKE '%'||#{word}||'%' </if>
			<if test="col=='id'">
				id LIKE '%'||#{word}||'%' </if>
		</where>
		ORDER BY mdate desc
		)
		)
		<![CDATA[where r>=#{sno} and r<=#{eno}]]>
	</select>

	<select id="getFname" parameterType="String" resultType="String">
		select
		fname from member where id = #{id}
	</select>

	<delete id="delete" parameterType="String">
		delete from member where id =
		#{id}
	</delete>

	<update id="update" parameterType="MemberDto">
		update member set tel =
		#{tel}, email = #{email}, zipcode = #{zipcode}, address1 =
		#{address1}, address2 = #{address2}, job = #{job} where id = #{id}
	</update>

	<update id="updatePw" parameterType="Map">
		update member set passwd =
		#{passwd} where id = #{id}
	</update>

	<update id="updateFile" parameterType="Map">
		update member set fname =
		#{fname} where id = #{id}
	</update>

	<select id="read" parameterType="String" resultType="MemberDto">
		SELECT id,
		mname, tel, email, zipcode, address1, address2, job, mdate, fname
		FROM
		member WHERE id = #{id}
	</select>

	<select id="duplicateId" parameterType="String" resultType="int">
		SELECT COUNT(id) FROM member WHERE id=#{id}
	</select>

	<select id="duplicateEmail" parameterType="String" resultType="int">
		SELECT COUNT(email) FROM member WHERE email=#{email}
	</select>

	<insert id="create" parameterType="MemberDto">
		INSERT INTO member(id, passwd,
		mname, tel, email, zipcode, address1,
		address2, job, mdate, fname,
		grade)
		VALUES(#{id}, #{passwd}, #{mname}, #{tel},#{email}, #{zipcode},
		#{address1},
		#{address2}, #{job}, sysdate, #{fname}, 'H')
	</insert>

	<select id="getGrade" parameterType="String" resultType="String">
		select
		grade from member where id = #{id}
	</select>

	<select id="loginCheck" parameterType="Map" resultType="int">
		select
		count(*) from member where id=#{id} and passwd = #{passwd}
	</select>

</mapper>